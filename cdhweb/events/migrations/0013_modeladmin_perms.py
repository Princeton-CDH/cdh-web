# Generated by Django 2.2.17 on 2021-02-22 18:52

from django.contrib.auth.management import create_permissions
from django.db import migrations


def create_events_permissions(apps, schema_editor):
    """Set Wagtail user group permissions for non-Page Event models.

    By default, Wagtail creates the Moderator and Editor user groups. Users who
    access the wagtail backend (/cms) must be in one of these groups.

    Models that inherit from Wagtail's `Page` will have permissions set up for
    these groups, but Django models that can be managed via Wagtail (through
    the use of `modeladmin`) will not have permissions set up and will not be
    visible in Wagtail unless permissions are manually added.

    For Events, the relevant models are `EventType` and `Location`. Moderators
    can manage `EventType`s, and all users can manage `Location`s.
    """

    # ensure that permissions exist for all models in the module; in context of
    # tests they may not yet
    events_cfg = apps.get_app_config("events")
    events_cfg.models_module = True
    create_permissions(events_cfg, apps=apps, verbosity=0)
    events_cfg.models_module = None

    # get models and error if any aren't present - they should be since
    # wagtail's own migrations have already run
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    editors = Group.objects.get(name="Editors")
    moderators = Group.objects.get(name="Moderators")

    # get permissions to assign
    add_eventtype = Permission.objects.get(codename="add_eventtype")
    change_eventtype = Permission.objects.get(codename="change_eventtype")
    delete_eventtype = Permission.objects.get(codename="delete_eventtype")
    view_eventtype = Permission.objects.get(codename="view_eventtype")
    add_location = Permission.objects.get(codename="add_location")
    change_location = Permission.objects.get(codename="change_location")
    delete_location = Permission.objects.get(codename="delete_location")
    view_location = Permission.objects.get(codename="view_location")

    # give moderators all permissions on EventType and Location
    moderators.permissions.add(
        add_eventtype, change_eventtype, delete_eventtype, view_eventtype,
        add_location, change_location, delete_location, view_location,
    )

    # editors have all permissions on Location only
    editors.permissions.add(
        add_location, change_location, delete_location, view_location,
    )


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0012_rename_event_models'),
    ]

    operations = [
        migrations.RunPython(create_events_permissions,
                             reverse_code=migrations.RunPython.noop)
    ]
