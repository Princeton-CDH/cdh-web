// By default, every prose element has a bottom margin.
// `li` is excluded because list item spacing is handled later on.
// Same with headings because they have their own, more specific spacing values.
// Ignore header and footer, they have their own styles.
:where(main) {
  --space-default: 1rem;

  --space-l2-lg: #{px2rem(56)};
  --space-l3-lg: #{px2rem(40)};
  --space-l4-lg: #{px2rem(24)};
  --space-l5-lg: #{px2rem(40)};
  --space-l6-lg: #{px2rem(40)};

  --space-l1-sm: calc(var(--space-l1-lg) / 4);
  --space-l2-sm: calc(var(--space-l2-lg) / 4);
  --space-l3-sm: calc(var(--space-l3-lg) / 4);
  --space-l4-sm: calc(var(--space-l4-lg) / 4);
  --space-l5-sm: calc(var(--space-l5-lg) / 4);
  --space-l6-sm: calc(var(--space-l6-lg) / 4);

  --space-list-items: #{px2rem(8)};

  @include md {
    --space-l2-lg: #{px2rem(104)};
  }

  :is(p, ul, ol) {
    margin-bottom: var(--space-default);
  }
  // Headings have a little more bottom spacing than other prose elements
  h2 {
    margin-bottom: var(--space-l2-sm);
  }
  h3 {
    margin-bottom: var(--space-l3-sm);
  }
  h4 {
    margin-bottom: var(--space-l4-sm);
  }
  h5 {
    margin-bottom: var(--space-l5-sm);
  }
  h6 {
    margin-bottom: var(--space-l6-sm);
  }

  *:has(+ h2) {
    margin-bottom: var(--space-l2-lg);
  }
  *:has(+ h3) {
    margin-bottom: var(--space-l3-lg);
  }
  *:has(+ h4) {
    margin-bottom: var(--space-l4-lg);
  }
  *:has(+ h5) {
    margin-bottom: var(--space-l5-lg);
  }
  *:has(+ h6) {
    margin-bottom: var(--space-l6-lg);
  }

  // Headings followed immediately by a heading of a level down
  // should have only a small gap below.
  :where(h2):has(+ h3) {
    margin-bottom: var(--space-l2-sm);
  }
  :where(h3):has(+ h4) {
    margin-bottom: var(--space-l3-sm);
  }
  :where(h4):has(+ h5) {
    margin-bottom: var(--space-l4-sm);
  }
  :where(h5):has(+ h6) {
    margin-bottom: var(--space-l5-sm);
  }

  // List item spacing.
  :where(li):has(+ li) {
    margin-bottom: var(--space-list-items);
  }

  // Nested list spacing.
  // This is the only place we need to use margin-top :'(
  :where(li) :is(ul, ol) {
    margin-top: var(--space-list-items);
  }

  // Remove the bottom margin on the last prose element
  // (i.e. if it has no next sibling).
  // TODO: Could there be an argument to apply this to ALL elements (*) with no next sibling?
  :is(p, ul, ol, h1, h2, h3, h4, h5, h6):not(:has(+ *)) {
    margin-bottom: 0;
  }
}
