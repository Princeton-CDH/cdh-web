.streamfields-wrapper {
  // The flex column layout is to disable collapsing margins.
  // Usually collapsing margins is fine, but the 3d boxes have absolute-
  // positioned box overhang. Unfortunately, adding this amount as an extra
  // margin-bottom on the element that has the 3d box doesn't do anything,
  // because "collapsing margins" assumes we didn't want that extra space.
  display: flex;
  flex-direction: column;

  & > * + * {
    // Default `lg` space above each streamfield
    margin-block-start: var(--streamfield-space-lg);

    // Cases where there should be a `sm` space above:
    &:where(
        :is(
            .block-image,
            .block-table,
            .block-note,
            .block-paragraph,
            .block-pull_quote,
            .block-accordion_block:not(:has(> h2)),
            .block-embed:not(:has(> h2)),
            .block-video_block:not(:has(> h2))
          )
      ) {
      margin-block-start: var(--streamfield-space-sm);
    }

    // Cases where there should be a `xs` space above:
    &:where(:is(.block-heading + *)) {
      margin-block-start: var(--streamfield-space-xs);
    }
  }

  & > * {
    // Cap width of some (most?) streamfield block types
    &:where(
        .block-accordion_block,
        .block-table,
        .block-paragraph,
        .block-download_block,
        .block-cta_block,
        .block-note,
        .block-pull_quote,
        .block-video_block,
        .block-embed
      ) {
      max-inline-size: var(--reading-max-width);
    }
  }

  // Outdented components.
  // Tile block title is excluded because it needs to be wrapped in another
  // container to allow the "see all" link to display in line with it.
  :where(
      .block-heading,
      .block-accordion_block > h2,
      .block-video_block > h2,
      .block-embed > h2
    ) {
    @include md {
      margin-left: calc(-1 * var(--content-outdent));
    }
  }
}
