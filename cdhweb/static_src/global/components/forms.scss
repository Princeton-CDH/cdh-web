// Input with joined-up inline submit button.
// Used for search and email signup forms.
.text-input-and-button-group {
  --search-control-height: 36px;
  --radius: 24px;
  display: flex;

  :where(input) {
    font: inherit;
    height: var(--search-control-height);
  }
  :where(:is(input[type='text'], input[type='email'])) {
    flex-grow: 1;
    inline-size: 100%;
    padding-inline: 20px;
    border: 1px solid var(--form-control-border-color, var(--color-grey-110));
    border-right: 0;
    border-radius: var(--radius) 0 0 var(--radius);
    font-size: px2rem(16);
  }
  :where(input[type='submit']) {
    cursor: pointer;
    padding-inline: 24px;
    background-color: var(--btn-bg, var(--color-grey-100));
    color: var(--btn-color, var(--color-white));
    border: 1px solid var(--form-control-border-color, transparent);
    border-left: 0;
    border-radius: 0 var(--radius) var(--radius) 0;
    font-size: px2rem(15);
    font-weight: bold;

    &:hover {
      background-color: var(--btn-bg-hover, var(--color-black));
    }
  }
}

// Custom checkboxes and radios.
// Shared styles here. radio/checkbox-specific styles afterwards.
:is(.checkbox, .radio) {
  --input-size: #{px2rem(20)};

  position: relative;
  display: flex;
  align-items: center;

  :where(input) {
    @include visuallyHidden;
  }
  :where(label) {
    cursor: pointer;
    padding-inline-start: calc(var(--input-size) + 8px);

    // ::before = bg.
    // Only checkboxes use `::after` (for the check mark).
    // Radios just change the `::before`'s border width when checked.
    &::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      width: var(--input-size);
      height: var(--input-size);
      background-color: var(--input-bg);
    }
  }

  &:has(input:focus-visible) {
    label::before {
      outline: 2px solid var(--focus-ring-color);
      outline-offset: 2px;
    }
  }
}

.radio {
  --input-bg: var(--color-white);
  --input-border-width: 1px;

  label {
    &::before,
    &::after {
      border-radius: 50%;
    }
    &::before {
      border: var(--input-border-width) solid var(--color-grey-100);
    }
  }

  &:has(input:checked) {
    --input-border-width: calc(var(--input-size) / 3);
  }
}

.checkbox {
  --input-bg: var(--color-grey-100);

  label {
    &::before {
      border-radius: 4px;
    }
    &::after {
      content: '';
      opacity: 0; // only shown when :checked
      position: absolute;
      left: px2rem(3);
      top: px2rem(5);
      width: px2rem(13);
      aspect-ratio: 14/10; // from viewbox
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 14 10'%3E%3Cpath fill='%23fff' fill-rule='evenodd' d='M12.766 2.522 6.173 9.116a1.184 1.184 0 0 1-1.653 0l-3.29-3.29a1.184 1.184 0 0 1 0-1.652 1.184 1.184 0 0 1 1.653 0L5.36 6.652 11.128.884a1.184 1.184 0 0 1 1.652 0 1.18 1.18 0 0 1-.014 1.638Z' clip-rule='evenodd'/%3E%3C/svg%3E%0A");
      background-repeat: no-repeat;
    }
  }

  // show check mark
  &:has(input:checked) {
    label::after {
      opacity: 1;
    }
  }
}
