# This file is exec'd from settings.py, so it has access to and can
# modify all the variables in settings.py.

# If this file is changed in development, the development server will
# have to be manually restarted because changes will not be noticed
# immediately.

DEBUG = True

INTERNAL_IPS = [
    "127.0.0.1",
]

# Turn this on in test/QA site to show test banner
# SHOW_TEST_WARNING = True

# Turn this on to enable google analytics in production
# INCLUDE_ANALYTICS = True

# Make these unique, and don't share it with anybody.
SECRET_KEY = ""
NEVERCACHE_KEY = ""

DATABASES = {
    "default": {
        # Ends with "postgresql", "mysql", "sqlite3" or "oracle".
        "ENGINE": "django.db.backends.postgresql",
        # "ENGINE": "django.db.backends.sqlite3",
        # DB name or path to database file if using sqlite3.
        # "NAME": "dev.db",
        "NAME": "cdhweb",
        # Not used with sqlite3.
        "USER": "cdhweb",
        # Not used with sqlite3.
        "PASSWORD": "pass!@#$",
        # Set to empty string for localhost. Not used with sqlite3.
        "HOST": "",
        # Set to empty string for default. Not used with sqlite3.
        "PORT": "",
    }
}

# configure ldap servers, search base, and filter
PUCAS_LDAP.update({
    'SERVERS': [
        'ldap1',
        'ldap2',
        'ldap3'
    ],
    'SEARCH_BASE': '',
    'SEARCH_FILTER': "(uid=%(user)s)",
})

# optional configuration for compress autoprefixer
# COMPRESS_AUTOPREFIXER_BINARY = '/usr/local/bin/postcss'
# COMPRESS_AUTOPREFIXER_ARGS = '--use autoprefixer' (default)

# COMPRESS_ENABLED = True

# sample logging config
#
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'basic': {
#             'format': '[%(asctime)s] %(levelname)s:%(name)s::%(message)s',
#             'datefmt': '%d/%b/%Y %H:%M:%S',
#         },
#     },
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#             'formatter': 'basic'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#         'viapy':  {
#             'handlers': ['console'],
#             'level': 'DEBUG'
#         },
#         'derrida':  {
#             'handlers': ['console'],
#             'level': 'DEBUG'
#         },
#         'haystack':  {
#             'handlers': ['console'],
#             'level': 'DEBUG'
#         }

#     },
# }

# Wagtail sends email notifications when content is submitted for moderation,
# and when the content is accepted or rejected.
# https://docs.wagtail.io/en/latest/reference/settings.html#email-notifications
WAGTAILADMIN_NOTIFICATION_FROM_EMAIL = 'admin@cdh.princeton.edu'
WAGTAILADMIN_NOTIFICATION_USE_HTML = True


###################
# DEPLOY SETTINGS #
###################

# Domains for public site
ALLOWED_HOSTS = ["*"]

# These settings are used by the default fabfile.py provided.
# Check fabfile.py for defaults.

# FABRIC = {
#     "DEPLOY_TOOL": "rsync",  # Deploy with "git", "hg", or "rsync"
#     "SSH_USER": "",  # VPS SSH username
#     "HOSTS": [""],  # The IP address of your VPS
#     "DOMAINS": ALLOWED_HOSTS,  # Edit domains in ALLOWED_HOSTS
#     "REQUIREMENTS_PATH": "requirements.txt",  # Project's pip requirements
#     "LOCALE": "en_US.UTF-8",  # Should end with ".UTF-8"
#     "DB_PASS": "",  # Live database password
#     "ADMIN_PASS": "",  # Live admin user password
#     "SECRET_KEY": SECRET_KEY,
#     "NEVERCACHE_KEY": NEVERCACHE_KEY,
# }
