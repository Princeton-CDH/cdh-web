from urllib.parse import urljoin
from wagtail.models import Site
from django.forms.widgets import TextInput

from django.templatetags.static import static


def absolutize_url(local_url, request=None):
    """Convert a local url to an absolute url, with scheme and server name,
    based on the current configured :class:`~django.contrib.sites.models.Site`.

    :param local_url: local url to be absolutized, e.g. something generated by
        :meth:`~django.core.urlresolvers.reverse`
    """
    if local_url.startswith("https://") or local_url.startswith("http://"):
        return local_url

    # add scheme and server (i.e., the http://example.com) based
    # on the Wagtail request or default Site
    site = Site.objects.order_by("is_default_site").first()
    if request:
        site = Site.find_for_request(request)
    root = site.root_url

    return urljoin(root, local_url)


class LengthOverrideWidget(TextInput):
    """
    Enforce a client-side text length limit in a widget

    This can be used in conjuction with a Wagtail fieldpanel
    to allow a limit to be enforced without making changes
    to the Page model - particularly useful for the title
    field.

    Usage:
        content_panels = [
            FieldPanel(
                "title",
                widget=LengthOverrideWidget(max_length=70),
            ),
            ...
        ]
    """

    def __init__(self, attrs=None, max_length=None):
        super().__init__(attrs)
        self.max_length = max_length

    def get_context(self, name, value, attrs):
        context = super().get_context(name, value, attrs)
        context["widget"]["attrs"]["maxlength"] = self.max_length
        return context


def get_first_of(instance, *fields, default=None):
    """
    Return the first non empty value from fields on `instance` - or `default`
    """
    return next(
        (value for field in fields if (value := getattr(instance, field, ""))), default
    )


def get_default_preview_img_url():
    from cdhweb.pages.models import PurpleMode

    #  default social preview image, relative to static url
    purple_mode_setting = PurpleMode.load()
    if purple_mode_setting.purple_mode:
        default_preview_img = "images/alt-modes/purple/cdhlogo_square.png"
    else:
        default_preview_img = "images/cdhlogo_square.jpg"

    return absolutize_url(static(default_preview_img))
